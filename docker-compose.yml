version: '3.8'

services:
  db:
    image: postgis/postgis:15-3.3
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-quest_db}
      POSTGRES_USER: ${POSTGRES_USER:-quest_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-quest_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # No ports exposed to the host in production for security
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  redis:
    image: redis:7-alpine
    # No ports exposed to the host in production
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  api:
    build:
      context: .
      target: production # Use the lean production stage from Dockerfile
    entrypoint: /app/docker-entrypoint.sh
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-quest_user}:${POSTGRES_PASSWORD:-quest_password}@db:5432/${POSTGRES_DB:-quest_db}
      - REDIS_URL=redis://redis:6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always

volumes:
  postgres_data:
  redis_data: